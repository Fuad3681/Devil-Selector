--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==5) then function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==3) then function v25()local v39=v24();local v40=v24();return (( -(1 + (1 -0)) * v21(v40,(25 -13) + 20)) + 1) * ((469 -(178 + 289))^(v21(v40,21,65 -(7 + 27)) -1023)) * ((((v21(v40,4 -3,4 + 16) * ((1 + 1)^(6 + 26))) + v39)/((209 -(200 + 7))^52)) + (2 -1));end v26=nil;function v26(v31)local v41=0 + 0;local v42;local v43;while true do if (v41==(4 -2)) then v43={};for v72=1, #v42 do v43[v72]=v3(v2(v4(v42,v72,v72)));end v41=(1050 -(530 + 509)) -8;end if (v41==(89 -(54 + 21 + 11))) then return v7(v43);end if (v41==1) then v42=v4(v16,v19,(v19 + v31) -(1 + 0));v19=v19 + v31;v41=1 + 1;end if (v41==0) then v42=nil;if  not v31 then local v87=0 + 0;while true do if (v87==(0 -0)) then v31=v24();if (v31==(0 -0)) then return "";end break;end end end v41=1;end end end v27=v24;v18=4;end if (v18==1) then function v21(v32,v33,v34)if v34 then local v64=(v32/(2^(v33-(1039 -((3710 -2775) + (405 -(276 + 26)))))))%((3 -(1 -0))^(((v34-(3 -2)) -(v33-(1076 -(63 + 1012)))) + (4 -3)));return v64-(v64%1);else local v65=2^(v33-((2 -1) + 0));return (((v32%(v65 + v65))>=v65) and (1 -0)) or (0 -0);end end v22=nil;function v22()local v44=v2(v16,v19,v19);v19=v19 + 1;return v44;end v23=nil;v18=2;end if (v18==2) then function v23()local v45,v46=v2(v16,v19,v19 + (1164 -(59 + 1103)));v19=v19 + (848 -(205 + 641));return (v46 * (744 -488)) + v45;end v24=nil;function v24()local v47=0 -0;local v48;local v49;local v50;local v51;while true do if (v47==(0 -0)) then v48,v49,v50,v51=v2(v16,v19,v19 + (1676 -(1013 + 660)));v19=v19 + 4;v47=1 + 0;end if (v47==(617 -(428 + (1714 -(400 + 1126))))) then return (v51 * (8687886 + 8089330)) + (v50 * (262501 -(691034 -494069))) + (v49 * ((1883 -(1024 + 239)) -364)) + v48;end end end v25=nil;v18=3;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v52=0 -0;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v52==(0 -0)) then v53=0;v54=nil;v52=1;end if (v52==(7 -5)) then v57=nil;v58=nil;v52=3 + 0;end if ((1220 -(495 + 722))~=v52) then else v59=nil;v60=nil;v52=1914 -(512 + 1398);end if (v52==(1080 -(685 + 394))) then v55=nil;v56=nil;v52=2;end if (v52~=(333 -(8 + 321))) then else while true do if (v53~=(1 -0)) then else local v91=1630 -(1313 + 317);while true do if (v91~=(1791 -(451 + 1339))) then else v53=6 -4;break;end if ((1544 -(116 + 1428))~=v91) then else v56=nil;v57=nil;v91=1 + 0;end end end if (v53~=(2 + 1)) then else v60=nil;while true do local v94=0 + 0;while true do if (v94~=(0 -0)) then else local v97=0;local v98;while true do if (v97~=(1307 -(488 + 819))) then else v98=0;while true do if (v98==(35 -(21 + 14))) then if (v54~=1) then else local v104=0 -0;local v105;local v106;while true do if (v104~=0) then else v105=0 -0;v106=nil;v104=1053 -(68 + 984);end if (v104==(1 -0)) then while true do if (v105==(404 -(62 + 342))) then v106=0 + 0;while true do if (v106~=(0 -0)) then else v58={v55,v56,nil,v57};v59=v24();v106=835 -(260 + 574);end if ((1 + 0)~=v106) then else v60={};v54=2 + 0;break;end end break;end end break;end end end if (v54==0) then local v107=0 + 0;local v108;local v109;while true do if ((195 -(127 + 67))==v107) then while true do if (v108~=(0 + 0)) then else v109=1522 -(450 + 1072);while true do if (v109==(1 -0)) then v57={};v54=1;break;end if (v109~=(695 -(494 + 201))) then else local v234=0 -0;while true do if (v234~=(729 -(450 + 278))) then else v109=1194 -(134 + 1059);break;end if (v234~=0) then else local v261=1464 -(1360 + 104);while true do if (v261==(659 -(388 + 271))) then v55={};v56={};v261=1;end if (v261==(3 -2)) then v234=1809 -(82 + 1726);break;end end end end end end break;end end break;end if (v107==(0 -0)) then v108=0 + 0;v109=nil;v107=1 + 0;end end end v98=484 -(30 + 453);end if (v98==(1 + 0)) then v94=4 -3;break;end end break;end end end if ((4 -3)==v94) then if (v54~=3) then else local v99=182 -(95 + 87);local v100;local v101;while true do if (v99==(0 + 0)) then v100=1547 -(1374 + 173);v101=nil;v99=1;end if (v99~=1) then else while true do if (v100~=0) then else v101=0;while true do local v111=0 -0;local v112;while true do if ((1416 -(45 + 1371))~=v111) then else v112=946 -(172 + 774);while true do if (v112==(0 + 0)) then if ((1 + 0)==v101) then return v58;end if (v101==(0 + 0)) then local v235=0 -0;while true do if (v235==(1 + 0)) then v101=2 -1;break;end if (v235~=(0 -0)) then else for v272=1 + 0,v24() do v56[v272-(605 -(470 + 134))]=v29();end for v274=1 + 0,v24() do v57[v274]=v24();end v235=1 + 0;end end end break;end end break;end end end break;end end break;end end end if (v54~=(2 + 0)) then else local v102=0;local v103;while true do if ((1391 -(729 + 662))~=v102) then else v103=0 + 0;while true do if (v103==(0 + 0)) then for v113=1,v59 do local v114=0 + 0;local v115;local v116;local v117;while true do if (v114==(1023 -(726 + 296))) then v117=nil;while true do if (v115~=(0 + 0)) then else local v223=0;local v224;local v225;while true do if (v223==1) then while true do if (v224~=(0 -0)) then else v225=667 -(502 + 165);while true do if (v225~=(1 + 0)) then else v115=1754 -(1737 + 16);break;end if ((0 + 0)~=v225) then else local v309=0 + 0;local v310;while true do if (v309~=(598 -(567 + 31))) then else v310=0 + 0;while true do if (v310~=(1329 -(379 + 949))) then else v225=1 -0;break;end if (v310==(0 -0)) then v116=v22();v117=nil;v310=1 -0;end end break;end end end end break;end end break;end if (v223==0) then v224=0;v225=nil;v223=1;end end end if ((4 -3)==v115) then if (v116==(4 -3)) then v117=v22()~=0;elseif (v116==(1961 -(678 + 1281))) then v117=v25();elseif (v116==(3 + 0)) then v117=v26();end v60[v113]=v117;break;end end break;end if (v114==(1607 -(1319 + 288))) then local v156=0 + 0;while true do if (v156==(0 + 0)) then v115=922 -(465 + 457);v116=nil;v156=2 -1;end if (v156~=(1 + 0)) then else v114=1 + 0;break;end end end end end v58[370 -(112 + 255)]=v22();v103=1;end if (v103==1) then for v118=228 -(171 + 56),v24() do local v119=1084 -(772 + 312);local v120;local v121;local v122;local v123;while true do if ((592 -(489 + 103))~=v119) then else v120=0;v121=nil;v119=1 + 0;end if (2~=v119) then else while true do if (v120~=1) then else v123=nil;while true do if (v121~=(1969 -(1156 + 812))) then else while true do if (v122==(0 + 0)) then v123=v22();if (v21(v123,2 -1,1 + 0)==(0 + 0)) then local v292=0 + 0;local v293;local v294;local v295;local v296;local v297;while true do if (v292==(1 + 0)) then v295=nil;v296=nil;v292=2;end if (v292==2) then v297=nil;while true do if (v293==(0 + 0)) then local v328=0;while true do if (v328~=(1 + 0)) then else v293=1;break;end if (v328~=(0 + 0)) then else v294=0 -0;v295=nil;v328=1;end end end if (v293~=(230 -(211 + 17))) then else while true do if (v294~=3) then else if (v21(v296,3,2002 -(1114 + 885))==(2 -1)) then v297[4 + 0]=v60[v297[641 -(527 + 110)]];end v55[v118]=v297;break;end if (v294==(2 + 0)) then local v332=0;while true do if (v332==(1 + 0)) then v294=3 + 0;break;end if (v332~=(1675 -(536 + 1139))) then else if (v21(v296,1342 -(463 + 878),4 -3)==1) then v297[1 + 1]=v60[v297[7 -5]];end if (v21(v296,1710 -(487 + 1221),2)~=(1 + 0)) then else v297[993 -(540 + 450)]=v60[v297[3]];end v332=1 + 0;end end end if (v294==(1227 -(547 + 680))) then local v333=0;while true do if (v333~=(1 + 0)) then else v294=2 -1;break;end if (v333==(0 -0)) then v295=v21(v123,1403 -(803 + 598),9 -6);v296=v21(v123,537 -(84 + 449),15 -9);v333=2 -1;end end end if (v294~=(3 -2)) then else local v334=0 -0;local v335;while true do if (v334~=(0 -0)) then else v335=0 -0;while true do if ((1 + 0)~=v335) then else v294=2 + 0;break;end if ((1583 -(1014 + 569))~=v335) then else local v343=0 -0;while true do if ((0 + 0)==v343) then v297={v23(),v23(),nil,nil};if (v295==0) then local v348=282 -(243 + 39);local v349;local v350;local v351;while true do if (v348~=(1 + 0)) then else v351=nil;while true do if (v349~=(0 + 0)) then else local v354=0 -0;while true do if (v354~=(1199 -(52 + 1146))) then else v349=1223 -(1007 + 215);break;end if (v354~=0) then else v350=0;v351=nil;v354=1;end end end if ((1 + 0)~=v349) then else while true do if ((0 -0)~=v350) then else v351=0 -0;while true do if (0~=v351) then else v297[3]=v23();v297[8 -4]=v23();break;end end break;end end break;end end break;end if ((0 -0)==v348) then v349=0 + 0;v350=nil;v348=2 -1;end end elseif (v295==1) then v297[12 -9]=v24();elseif (v295==2) then v297[464 -(160 + 301)]=v24() -((5 -3)^(31 -15));elseif (v295~=(1281 -(984 + 294))) then else local v355=0 + 0;local v356;local v357;while true do if ((1 -0)~=v355) then else while true do if (v356~=0) then else v357=0 + 0;while true do if (v357~=(415 -(124 + 291))) then else v297[7 -4]=v24() -(2^(14 + 2));v297[1265 -(112 + 1149)]=v23();break;end end break;end end break;end if (v355~=0) then else v356=0 + 0;v357=nil;v355=1;end end end v343=1;end if (v343~=(1 + 0)) then else v335=1 -0;break;end end end end break;end end end end break;end if (v293==(1689 -(1503 + 185))) then local v329=0 -0;while true do if (v329~=0) then else v296=nil;v297=nil;v329=1 + 0;end if (v329~=1) then else v293=1291 -(270 + 1019);break;end end end end break;end if ((0 -0)==v292) then v293=0;v294=nil;v292=1 + 0;end end end break;end end break;end if (v121==(0 -0)) then local v247=0 -0;local v248;while true do if (v247~=(399 -(316 + 83))) then else v248=231 -(163 + 68);while true do if (v248==(1 -0)) then v121=1;break;end if (v248==(0 + 0)) then v122=0 -0;v123=nil;v248=1 -0;end end break;end end end end break;end if (v120~=(0 -0)) then else local v227=0;while true do if (v227~=0) then else v121=0 -0;v122=nil;v227=598 -(573 + 24);end if (v227~=(2 -1)) then else v120=1260 -(1136 + 123);break;end end end end break;end if (1==v119) then v122=nil;v123=nil;v119=2 -0;end end end v54=1848 -(933 + 912);break;end end break;end end end break;end end end break;end if (v53==(0 -0)) then local v92=0 + 0;while true do if (v92==(0 -0)) then v54=1615 -(1044 + 571);v55=nil;v92=1 + 0;end if (v92~=(1 + 0)) then else v53=1;break;end end end if ((1 + 1)~=v53) then else local v93=0;while true do if (v93~=(0 -0)) then else v58=nil;v59=nil;v93=1;end if (v93~=(1 -0)) then else v53=3;break;end end end end break;end end end v18=5;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v35)if (v2(v35,2)==79) then v20=v1(v4(v35,1,1));return "";else local v66=v3(v1(v35,16));if v20 then local v74=v6(v66,v20);v20=nil;return v74;else return v66;end end end);v21=nil;v18=1;end if (v18==5) then v30=nil;function v30(v36,v37,v38)local v61=v36[1];local v62=v36[2];local v63=v36[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1;local function v71()local v75=v61;local v76=Const;local v77=v62;local v78=v63;local v79=v28;local v80={};local v81={};local v82={};for v88=0 + 0,v70 do if (((3611 -(680 + 917))>=(401 + 1501)) and (v88>=v78)) then v80[v88-v78]=v69[v88 + 1 + 0];else v82[v88]=v69[v88 + (2 -1)];end end local v83=(v70-v78) + (538 -(303 + 234));local v84;local v85;while true do local v89=(2863 -1270) -((3114 -2003) + 482);local v90;while true do if (((5322 -(426 + 492))==(6072 -(131 + 1537))) and (v89==(0 -0))) then v90=(0 + 0) -0;while true do if ((v90==(0 + 0)) or ((5846 -(445 + 1055))<((8487 -4641) -2557))) then v84=v75[v67];v85=v84[1 -0];v90=1396 -(1264 + 131);end if (((1626 + 2217)==(5770 -(925 + 1002))) and (v90==(1 + 0))) then if ((v85<=(13 + 10)) or ((6641 -(502 + 1161))<(3295 -(8 + 835 + 14)))) then if (((662 + 2287)<=4019) and (v85<=(8 + 3))) then if ((v85<=(906 -(580 + 321))) or (((1470 -(85 + 99)) -442)==(1464 -(189 + 46)))) then if (((6426 -(424 + 1056))>=(3908 -1436)) and (v85<=(1 + 1))) then if ((v85<=0) or ((882 + 49 + 224)>=(2765 -(130 + (1019 -(471 + 461)))))) then local v124=0 -0;local v125;local v126;local v127;while true do if (((1268 + 2430)==(5277 -(1299 + 280))) and (v124==(0 -0))) then v125=0 -0;v126=nil;v124=1 + 0;end if (((4405 -(1 + 66 + 380))>=(325 + 474)) and (v124==(1 + 0))) then v127=nil;while true do if (((1654 -(89 + 748))>=(304 + 138)) and (v125==(1 -0))) then v82[v126 + ((692 -(452 + 238)) -1)]=v127;v82[v126]=v127[v84[9 -5]];break;end if (((4737 -(4409 -1286))<(5885 -(695 + 1041))) and (v125==(0 -0))) then local v238=0;while true do if ((v238==(1 -0)) or (2928<=(6319 -3659))) then v125=1 + 0;break;end if ((v238==(0 -0)) or ((2487 -(1655 + 314))>(277 + 3923))) then v126=v84[(1 -0) + (1955 -(1655 + 299))];v127=v82[v84[3]];v238=1 + 0;end end end end break;end end elseif (((310 + 564)>=(2344 -(168 + 1402))) and (v85>(1 + (1270 -(778 + 492))))) then if ((v82[v84[1747 -(362 + 1383)]]<v82[v84[39 -(7 + (756 -(341 + 387)))]]) or ((5397 -(351 + 1037))==(3004 -(2497 -(619 + 50))))) then v67=v67 + (242 -(136 + 105));else v67=v84[1 + 2];end else v82[v84[2 + 0]][v84[640 -(443 + 194)]]=v84[3 + 1];end elseif ((v85<=(235 -(119 + 113))) or ((1134 + 808 + 482)<=(14 + 134))) then do return;end elseif (((2735 + 318)==(3456 -(365 + 38))) and (v85>(206 -((637 -(299 + 268)) + 132)))) then local v158=(326 -(45 + 281)) + 0;local v159;local v160;local v161;while true do if ((v158==((0 + 0) -0)) or ((4439 -(141 + 14 + 965))<=(2826 -(69 + 1152)))) then v159=0 -0;v160=nil;v158=1 + 0;end if ((v158==((2 + 2) -3)) or ((5619 -(1397 + 260))>((6818 -(523 + 1227)) -((176 -(39 + 42)) + 381)))) then v161=nil;while true do if ((1969>(958 -488)) and (v159==(174 -(100 + 73)))) then for v262=v160 + 1 + 0,v68 do v8(v161,v82[v262]);end break;end if (((6394 -2489)>(925 -(354 + 95))) and (v159==(0 -0))) then v160=v84[1 + 1];v161=v82[v160];v159=1;end end break;end end else v82[v84[3 -(497 -(98 + 398))]]();end elseif (((11479 -7762)==(150 + 3567)) and (v85<=(640 -(232 + 370 + 30)))) then if ((v85<=(16 -10)) or ((5552 -2321)>=(3238 + 1701))) then do return v82[v84[121 -(78 + 41)]];end elseif (((4069 -3011)<(1180 + 3369)) and (v85==(4 + 3))) then local v162=1434 -(1138 + 296);local v163;local v164;while true do if (((2320 + 1256)<(5448 -(917 + 711))) and (v162==(0 -0))) then v163=v84[1215 -(50 + 3 + 1159)];v164=v82[v163];v162=1166 -(1002 + (333 -170));end if (((3409 -(192 + 181))<(3345 + 214)) and (1==v162)) then for v239=v163 + 1 + 0,v84[3 + 1] do v164=v164   .. v82[v239];end v82[v84[2]]=v164;break;end end else local v165=0 -0;local v166;local v167;local v168;local v169;local v170;local v171;while true do if ((v165==(0 -0)) or ((575 + 2386)>(680 + 4209))) then v166=0 + 0;v167=nil;v165=1 + 0;end if (((3198 + 1421)==(6076 -(304 + 1153))) and (v165==(1 -0))) then v168=nil;v169=nil;v165=1313 -(734 + 577);end if (((804 + 827)<((5155 -(516 + 219)) -1972)) and (v165==(1704 -(1530 + 171)))) then while true do if (((385 + 3975)==(7556 -(6994 -3798))) and (v166==(0 + 0))) then v167=0 + 0;v168=nil;v166=3 -2;end if (((7029 -3422)>(3315 -(376 + 970))) and (v166==(1 + 0 + 0))) then local v255=1090 -((494 -152) + 748);while true do if (((284 -137)==(1959 -(1364 + 448))) and (v255==((932 -(461 + 470)) + 0))) then v166=173 -(119 + 52);break;end if (((1140 + 703)<(675 + 2179)) and (v255==(0 + 0))) then v169=nil;v170=nil;v255=3 -2;end end end if (((9160 -6411)>=(7019 -5441)) and (v166==(1 + 1))) then v171=nil;while true do if ((v167==(1 -0)) or ((887 + 1276)>(3497 -(414 + 449)))) then local v281=(974 -(54 + 184)) -(5 + 229 + 502);local v282;while true do if ((((15033 -9161) -(878 + 7))>(6080 -(991 + 132))) and (v281==(0 -0))) then v282=0 + 0;while true do if ((((1 -0) + 0)==v282) or ((9981 -(21840 -16228))==1269)) then v167=458 -(133 + 323);break;end if (((367 + 2853)<=(7569 -2623)) and (v282==(925 -(710 + 215)))) then local v325=0 + 0;while true do if ((v325==(1953 -(379 + 1574))) or ((1007 + 2169)<=(1128 + 389))) then v68=(v170 + v168) -((1943 -(1597 + 343)) -2);v171=0 -0;v325=1411 -(1358 + 52);end if (((2745 + 1165)==(1298 + 2612)) and (v325==(879 -((1497 -(391 + 250)) + 22)))) then v282=602 -(583 + (51 -33));break;end end end end break;end end end if ((v167==(208 -(69 + 139))) or ((5121 -(97 + 322))<=(4560 -(993 + 711)))) then local v283=1446 -(860 + 586);local v284;while true do if ((v283==(672 -(528 + 144))) or ((2014 -(520 + 678))>=(1338 + 1231))) then v284=1357 -(468 + 889);while true do if (((624 + 390)==(387 + 627)) and (v284==1)) then v167=1 -0;break;end if (((2322 + 1139)>=(3554 -((651 -374) + 74))) and (v284==(1161 -(5 + 1156)))) then v168=v84[(332 -(250 + 75)) -5];v169,v170=v79(v82[v168](v13(v82,v168 + 1 + 0,v84[2 + 1])));v284=(1448 -(935 + 512)) -0;end end break;end end end if (((536 -(34 + 500))==v167) or ((2953 -(377 + 394))==(3180 -(1546 + 223)))) then for v298=v168,v68 do local v299=0 -0;local v300;while true do if (((2597 -(1281 + 480))<(656 + 438)) and (v299==(0 -(0 -0)))) then v300=0 -0;while true do if (((768 -(221 + 547))==v300) or ((1584 + 318)>=(3186 -678))) then v171=v171 + 1;v82[v298]=v169[v171];break;end end break;end end end break;end end break;end end break;end if ((v165==((2379 -979) -(1113 + 285))) or ((2922 -(213 + 109))<((1950 + 1153) -(853 + 893)))) then v170=nil;v171=nil;v165=7 -4;end end end elseif ((v85<=(1 + 0 + 8)) or ((9339 -6905)<((2180 + 494) -(116 + 603)))) then local v128=846 -(716 + 130);local v129;local v130;local v131;local v132;while true do if ((v128==(1 + 1)) or (((1753 -(110 + 297)) -(425 + 161))==(2389 -((2144 -1454) + 1249)))) then while true do if (((8075 -5435)==(663 + 1977)) and (v129==((2074 -(255 + 443)) -(814 + 560)))) then for v249=1 + 0,v84[4 + 0] do local v250=0 + 0;local v251;local v252;while true do if (((4276 -(56 + 152))>=(15077 -11034)) and (v250==(0 + 0))) then v251=1146 -(180 + 966);v252=nil;v250=1;end if ((((3547 -(638 + 993)) -(693 + 1222))==v250) or (((1629 + 1735) -1667)==(2763 -1746))) then while true do if ((v251==(3 -2)) or ((3198 + 123)>=(2761 + 1552))) then if ((v252[1 + 0]==(112 -68)) or ((91 + 1299)<(18 + 18))) then v132[v249-(787 -(115 + 671))]={v82,v252[2 + (4 -3)]};else v132[v249-(3 -2)]={v37,v252[4 -1]};end v81[ #v81 + 1 + 0]=v132;break;end if ((v251==((893 + 506) -(338 + 1061))) or (((1986 + 2594) -(37 + (881 -449)))>(5474 -(924 + 66)))) then local v312=0 -0;while true do if ((v312==(0 + 0)) or ((2258 + 74)>=(3229 -774))) then local v317=0 -0;while true do if ((v317==(1004 -(383 + 621))) or ((6664 -4065)>(222 + 4442))) then v67=v67 + (3 -2) + 0;v252=v75[v67];v317=1 + 0;end if ((v317==((1196 -(1051 + 144)) -0)) or ((3274 -(704 + 139))>(3057 + 810))) then v312=1 -(0 -0);break;end end end if ((v312==(3 -2)) or ((4329 -(1576 + 134))<=2334)) then v251=1 + 0;break;end end end end break;end end end v82[v84[(21 -16) -3]]=v30(v130,v131,v38);break;end if ((v129==(1117 -(602 + 515))) or ((6195 -(1147 + 824))<1468)) then v130=v77[v84[476 -(259 + 214)]];v131=nil;v129=1 + 0;end if (((2134 + 1039)>=(209 + 528)) and (v129==(1 + 0))) then local v241=0 + 0 + 0;while true do if (((321 + 78 + 742)>(388 -(20 + 90))) and (v241==(0 + 0))) then v132={};v131=v10({},{__index=function(v276,v277)local v285=0 -0;local v286;local v287;while true do if (((5212 -(419 + 462))<(14122 -9647)) and ((0 -0)==v285)) then v286=264 -(119 + 145);v287=nil;v285=3 -2;end if ((v285==(1 -0)) or ((2879 -(829 + 2))>=(4539 -(910 + 74)))) then while true do if ((((5763 -(128 + 1121)) -2056)>=1618) and (v286==(0 + 0))) then local v326=0 + 0;while true do if (((1761 + 1638)>=2723) and (v326==(0 + 0))) then v287=v132[v277];return v287[2 -1][v287[2 + (1367 -(476 + 891))]];end end end end break;end end end,__newindex=function(v278,v279,v280)local v288=0 -0;local v289;while true do if (((358 + 139)<=(3252 -(65 + 1194))) and ((0 + (1020 -(360 + 660)))==v288)) then v289=v132[v279];v289[1160 -(88 + 1071)][v289[12 -(5 + 5)]]=v280;break;end end end});v241=1 + 0;end if ((v241==(1 + (801 -(646 + 155)))) or ((142 -(478 -(234 + 194)))>((2272 -771) + 876))) then v129=5 -3;break;end end end end break;end if ((v128==(1 -0)) or ((242 + 86)==(15222 -10522))) then v131=nil;v132=nil;v128=1 + 1;end if ((((9334 -5886) -1996)==((4281 -(148 + 1379)) -((2343 -(1002 + 694)) + 655))) and (v128==0)) then v129=0 + 0;v130=nil;v128=1 + 0;end end elseif ((v85==(7 + 3)) or ((447 + 1100)==(1405 + 3047))) then v82[v84[1 + 1]]=v30(v77[v84[8 -5]],nil,v38);else v82[v84[2 -0]]={};end elseif (((521 + (2256 -(1577 + 17)))>(247 + 490)) and (v85<=(133 -(58 + 58)))) then if (((118 + 158)<(15646 -11667)) and (v85<=(6 + 8))) then if ((v85<=(7 + 5)) or ((4820 -(149 + 1324))>(13203 -8754))) then local v133=0 -0;local v134;local v135;while true do if ((v133==(0 + 0)) or ((1018 + 5 + 1558)<(2432 -(1480 + 110)))) then v134=0 + 0 + 0;v135=nil;v133=1 -0;end if ((v133==(4 -3)) or ((5020 -(233 + 77))<=((3848 -1886) -635))) then while true do if ((((3182 + 1605) -(339 + 1369))>=(501 + 596)) and (v134==(814 -(40 + 774)))) then v135=v84[2 + 0];do return v82[v135](v13(v82,v135 + 1 + 0,v68));end break;end end break;end end elseif ((v85==(1316 -(1125 + 178))) or ((470 + 135)<(466 -124))) then v82[v84[1 + (4 -3)]][v84[14 -(10 + 1)]]=v82[v84[12 -8]];else v82[v84[2 + 0]]=v38[v84[3 + 0]];end elseif (((3827 -(25 + 9 + 298))>(1316 -703)) and (v85<=(26 -(7 + 4)))) then local v136=478 -(332 + 146);local v137;local v138;while true do if ((v136==(0 -0)) or ((8050 -3902)<=(2892 -(81 + 47)))) then local v218=(667 -(103 + 564)) + 0;while true do if ((v218==(0 + 0)) or ((55 + 196)>=(7027 -2732))) then v137=0 -0;v138=nil;v218=2 -1;end if (((5953 -(713 + 381))>=(1697 -627)) and (v218==(3 -2))) then v136=752 -(165 + 586);break;end end end if (((3128 -1874)<=3860) and (v136==(774 -(660 + 113)))) then while true do if (((1540 + 70)==(5934 -4324)) and (v137==(0 -0))) then v138=v84[(857 -(282 + 574)) + 1];v82[v138]=v82[v138](v82[v138 + (1343 -(145 + 517 + 680))]);break;end end break;end end elseif (((2612 -1206)==(1393 + 13)) and (v85==16)) then v67=v84[1 + 2];else v82[v84[1436 -(63 + 1371)]]=v82[v84[956 -(58 + (3503 -2608))]] * v82[v84[4 + (1068 -(638 + 430))]];end elseif ((v85<=((1450 -(1145 + 242)) -43)) or ((3191 -(1203 + 18))<=(1954 -(1270 + 676)))) then if (((7861 -4891)<=(1314 + 1756)) and (v85<=(1992 -((4078 -2648) + 544)))) then local v139=1484 -(1457 + 27);local v140;local v141;while true do if (((0 + 0)==v139) or ((3240 -((2759 -(434 + 1111)) + 258))>=(3815 -(210 + 165)))) then local v219=0 + 0;while true do if (((6907 -4366)>=(345 + 254)) and (v219==(1486 -(1058 + 428)))) then v140=0 -0;v141=nil;v219=1293 -(1264 + 28);end if ((v219==(1256 -(41 + 1214))) or ((1233 + 1520)==(218 + 885))) then v139=3 -2;break;end end end if ((v139==(1503 -(1060 + 442))) or ((5546 -((1629 -(906 + 333)) + (1920 -1266)))<=(1762 -1350))) then while true do if (((14225 -9353)==(18580 -13708)) and ((0 + 0 + 0)==v140)) then v141=v84[2 + 0];v82[v141]=v82[v141](v13(v82,v141 + (3 -2),v68));break;end end break;end end elseif (((1737 + 1120)>(2907 -1087)) and (v85==(4 + 12 + 3))) then local v177=0 + 0;local v178;while true do if (((2124 -(610 + 606))<=(2365 + 904)) and (v177==(0 + (765 -(79 + 686))))) then v178=v84[6 -4];do return v13(v82,v178,v68);end break;end end elseif ((v82[v84[(4 + 1) -3]]==v84[4]) or ((443 + 2858)==(1648 -919))) then v67=v67 + 1 + 0;else v67=v84[2 + 1];end elseif ((v85<=(29 -8)) or (4440==(2982 -577))) then if ((v82[v84[(2 -0) -0]]~=v82[v84[1910 -(1232 + 674)]]) or ((1364 + 2052)<=((441 + 3416) -1011))) then v67=v67 + 1 + 0;else v67=v84[1760 -(126 + 408 + 1223)];end elseif ((v85==((3 -2) + 21)) or ((69 + 45 + 5)>(212 + 2759))) then local v179=0 + 0;local v180;while true do if (((128 + 82)==(280 -(36 + 34))) and (v179==(0 -0))) then v180=v84[1871 -(1489 + 380)];v82[v180]=v82[v180]();break;end end else for v220=v84[1280 -(303 + 975)],v84[3 + 0] do v82[v220]=nil;end end elseif ((v85<=(102 -67)) or ((1891 -649)>=(751 + 3161))) then if ((v85<=(16 + 13)) or ((6797 -4690)<(2065 -(375 + 95)))) then if (((1154 -(138 + 348))<(858 + (61 -31))) and (v85<=(1931 -(878 + 1027)))) then if (((6563 -2789)>=(362 -173)) and (v85<=(2 + 22))) then if (((428 -124)<(3560 + 308)) and v82[v84[5 -3]]) then v67=v67 + (2 -1);else v67=v84[1959 -(814 + 1142)];end elseif ((v85>(63 -38)) or ((4128 -(991 + 79))<=(2722 -(483 + 282)))) then local v181=0 -0;local v182;while true do if ((2245<=(4001 -(673 + 10))) and (((0 + 0) -0)==v181)) then v182=v84[278 -(79 + (867 -(298 + 372)))];do return v13(v82,v182,v182 + v84[3 + 0]);end break;end end else local v183=1337 -(1177 + 160);local v184;local v185;local v186;local v187;local v188;while true do if ((v183==(1680 -(680 + 999))) or ((9402 -4564)<(3917 -(43 + 205)))) then v186=nil;v187=nil;v183=1602 -(22 + 1578);end if (((716 + 275 + 3)<=(7032 -4926)) and (v183==(0 -0))) then v184=0 -0;v185=nil;v183=1 -0;end if ((((1114 -(511 + 14)) -(73 + 514))==v183) or ((794 -(136 + 267 + 80))>=4230)) then v188=nil;while true do if ((1==v184) or ((1256 + 1470)>=(776 + 3191))) then v187=nil;v188=nil;v184=1 + (1 -0);end if ((((3888 -1948) -(23 + 87))<(587 + 2636)) and (v184==(1 + 1 + 0))) then while true do if (((2110 -1184)<2741) and (v185==((4 -3) + (0 -0)))) then v188=0 + 0;for v301=v186,v84[9 -5] do local v302=0 + 0;local v303;local v304;while true do if (((1876 -(459 + 11 + 170))<(2918 + 1769)) and (v302==(1248 -((1574 -(416 + 387)) + 477)))) then v303=0 + 0;v304=nil;v302=1 + 0;end if (((10459 -5544)>(4217 -2175)) and (v302==(1 + 0))) then while true do if ((v303==(0 -0)) or ((719 + 2666)>(4756 -(14 + 88 + 272)))) then v304=0 -0;while true do if (((2580 -(1241 + 518))==(960 -(126 + 13))) and (v304==(0 + 0))) then v188=v188 + 1 + 0;v82[v301]=v187[v188];break;end end break;end end break;end end end break;end if ((v185==0) or ((2286 -(1168 + 615))==(14950 -11734))) then local v290=0 + 0;local v291;while true do if (((1779 -748)<=(6263 -4145)) and (v290==(1706 -(1460 + (1999 -(529 + 1224)))))) then v291=0 + 0;while true do if (((2387 + 821)>651) and (v291==(1329 -(742 + 587)))) then local v327=0;while true do if ((v327==(1145 -(1127 + 17))) or ((4818 -((158 -115) + 516))<=(739 -587))) then v291=1739 -(39 + 1699);break;end if (((424 + 846)<=(2120 + 2124)) and (v327==(825 -(763 + 62)))) then v186=v84[774 -(394 + 378)];v187={v82[v186](v82[v186 + (1022 -(802 + 144 + 75))])};v327=606 -(79 + 526);end end end if (((1 + 0)==v291) or ((4436 -(733 + 710))==(928 + 81))) then v185=(3 -0) -2;break;end end break;end end end end break;end if (((3544 + 861)>(95 + 1594)) and (v184==((777 -(624 + 153)) + 0))) then v185=40 -(6 + 34);v186=nil;v184=1401 -(228 + (5561 -4389));end end break;end end end elseif ((((2139 -(832 + 513)) -(494 + 166))==(780 -(494 + 152))) and (v85<=(80 -53))) then if (((4919 -(77 + 931))>(6953 -3327)) and (v82[v84[1490 -(729 + 759)]]~=v84[6 -2])) then v67=v67 + 1 + 0;else v67=v84[12 -9];end elseif (((1569 -(254 + 285))<4147) and (v85==(20 + 8))) then v82[v84[1492 -(104 + 1386)]]=v84[453 -(75 + 375)]~=(0 -0);else v82[v84[(5129 -3181) -(1118 + 828)]]=v82[v84[7 -4]] + v82[v84[1 + 2 + 1]];end elseif ((v85<=(12 + 20)) or ((8979 -4469)<((5056 -(618 + 257)) -(66 + 128 + 1404)))) then if ((v85<=(1367 -(1051 + (804 -518)))) or ((1756 -(64 + 298))>=(12543 -9463))) then if (((2053 -(539 + 897))==((2644 -1727) -300)) and (v82[v84[2]]==v82[v84[75 -(51 + 20)]])) then v67=v67 + 1 + (0 -0);else v67=v84[1204 -(1046 + 155)];end elseif ((v85>(14 + 17)) or ((4147 -(371 + 1506))>=(1976 + 961 + 1012))) then if ((v84[1 + 1]==v82[v84[4 + 0]]) or ((2649 -(363 + 675))==(3459 -((1950 -1441) + 841)))) then v67=v67 + 1 + 0;else v67=v84[7 -4];end else local v191=0 + 0;local v192;local v193;while true do if (((3521 -(619 + 720))==2182) and (v191==(1260 -(741 + 518)))) then while true do if (((361 + 75)==(211 + 225)) and (v192==(1 + 0))) then for v263=v193,v68 do local v264=0 + 0;local v265;while true do if (((964 + 501)>=(48 + 1026)) and (v264==(0 + 0))) then v265=v80[v263-v193];v82[v263]=v265;break;end end end break;end if (((11672 -8430)<(17093 -12153)) and ((0 -0)==v192)) then local v256=672 -(78 + 255 + 339);while true do if ((v256==(0 + 0)) or ((4518 -3211)>(4883 -(52 + 150)))) then v193=v84[3 -1];v68=(v193 + v83) -(1 + 0);v256=2 -1;end if (((65 + 4233)>=(1833 -1159)) and (v256==(160 -(35 + 124)))) then v192=1 + 0;break;end end end end break;end if ((((6224 + 5767) -8101)>=(11903 -8433)) and (v191==(1444 -(627 + (2370 -1553))))) then v192=0 + 0;v193=nil;v191=3 -2;end end end elseif (((6299 -3616)>=((3004 + 3279) -4055)) and (v85<=(42 -(13 -4)))) then v82[v84[4 -2]]=v82[v84[2 + 1]][v84[1824 -(726 + 1094)]];elseif ((v85>34) or ((2847 + 1005)==(3933 -(428 + 322)))) then local v194=557 -(295 + 262);local v195;local v196;local v197;while true do if (((6696 -4469)<(328 + 4609)) and ((113 -(67 + 45))==v194)) then v197=0 + 0;for v244=v195,v84[556 -(370 + 182)] do local v245=554 -(68 + 486);local v246;while true do if (((7676 -4144)>(17 + 2145)) and (v245==(0 -0))) then v246=1289 -(958 + 331);while true do if ((v246==(0 + 0)) or ((2893 -2232)==4028)) then v197=v197 + (1 -0);v82[v244]=v196[v197];break;end end break;end end end break;end if ((4308==(6225 -(1033 + 884))) and (v194==(0 + 0))) then v195=v84[2 + (0 -0)];v196={v82[v195](v13(v82,v195 + (449 -(307 + 141)),v68))};v194=3 -2;end end else v82[v84[2 + 0]]=v84[8 -(566 -(555 + 6))];end elseif ((v85<=(1901 -(477 + 1383))) or ((4316 -(148 + 303))>(855 + 3970))) then if ((v85<=(10 + (70 -42))) or ((4159 -(140 + 99))<=(8464 -(14908 -8578)))) then if ((v85<=(74 -38)) or ((2961 -(182 + (471 -(230 + 219))))<=(570 + 1311))) then local v143=0 + 0;local v144;local v145;while true do if (((4679 -(1372 + 77))>(2349 + 204)) and ((0 -0)==v143)) then v144=0 -0;v145=nil;v143=(1554 -(267 + 1286)) + 0;end if (((2953 + (4235 -2425))>(357 -213)) and (v143==(1 + 0))) then while true do if ((v144==(1521 -(1122 + 399))) or ((3818 + 922)==(3514 -((2654 -(1141 + 369)) + 106)))) then v145=v84[5 -3];v82[v145](v13(v82,v145 + 1,v68));break;end end break;end end elseif ((v85>(32 + 5)) or ((4693 -(547 + 997))==((451 -251) + 690))) then v82[v84[(1395 -695) -(428 + 270)]]=v82[v84[96 -(17 + 38 + 38)]] -v82[v84[4 -(0 -0)]];else local v200=0 + (1417 -(1122 + 295));local v201;local v202;while true do if ((v200==(1 + 0)) or (((11939 -8196) -2381)==(4521 -(997 + 578)))) then while true do if ((v201==(0 -0)) or ((155 + 566)>=(3908 -(1753 + 54 + 75)))) then v202=v84[4 -2];v82[v202](v82[v202 + (1633 -(736 + 896))]);break;end end break;end if (((0 -0)==v200) or ((1801 -1350)>=(3547 -(90 + 73)))) then v201=0 + 0;v202=nil;v200=1 + 0;end end end elseif ((v85<=((72 + 64) -97)) or ((4973 -(6 + 1881))==(2052 + 1326))) then local v146=0;local v147;local v148;local v149;local v150;local v151;while true do if ((v146==(1 + (1 -0))) or ((752 + 2190)<(2120 -(957 + 505)))) then local v222=0 -(0 + 0);while true do if ((v222==(693 -(535 + 157))) or ((2154 + 1283)<(1135 + 862))) then v146=10 -7;break;end if ((v222==(979 -(734 + 245))) or ((753 + 272)==(848 -237))) then for v253=1 + 0,v148 do v82[v149 + v253]=v150[v253];end v151=v150[360 -(12 + 347)];v222=1 + 0;end end end if (((3115 + 1395)>=(18 + 579)) and ((3 -2)==v146)) then v149=v147 + (3 -(3 -2));v150={v82[v147](v82[v147 + 1 + 0],v82[v149])};v146=2 + 0;end if ((v146==(0 -0)) or ((3903 -(238 + 239))<=(992 + 822))) then v147=v84[1 + 1];v148=v84[1764 -(1591 + 169)];v146=1414 -(261 + 1152);end if (((5235 -2513)>(1913 + 238)) and ((1352 -(499 + 850))==v146)) then if (v151 or ((4044 -(540 + 976))>((9356 + 4715) -10527))) then local v230=0 + 0;local v231;local v232;while true do if (((6139 -(1070 + 412))>(1308 + 635)) and (v230==(1 + 0))) then while true do if ((((3275 -2442) -(493 + 340))==v231) or ((4120 + 526)<(164 + 2243))) then v232=1591 -(1168 + 423);while true do if ((v232==(477 -(91 + 160 + 226))) or ((1422 -964)>=(1593 + 844))) then v82[v149]=v151;v67=v84[10 -7];break;end end break;end end break;end if (((0 + 0)==v230) or ((1251 -(121 + (1127 -804)))>(6918 -5122))) then v231=1251 -(1008 + 243);v232=nil;v230=1 -0;end end else v67=v67 + 1 + 0 + 0;end break;end end elseif ((v85==(27 + 13)) or ((10232 -5889)<=(2391 -(1072 + 145)))) then local v203=0 -0;local v204;local v205;local v206;local v207;local v208;while true do if ((v203==(1 -0)) or ((1453 + 693)<(773 -(170 + 50)))) then v206=nil;v207=nil;v203=8 -6;end if ((v203==(0 + 0)) or ((11326 -8442)<=(5693 -4188))) then v204=0 + 0 + 0;v205=nil;v203=1 + 0;end if ((((71 + 90) -89)<=(1664 -(360 + 7))) and (v203==(1651 -(260 + 1389)))) then v208=nil;while true do if (((5516 -(485 + 393))>=(2853 -(319 + 27))) and (v204==(1 + 0))) then local v257=(716 -(189 + 527)) -0;while true do if (((927 -216)==(1474 -763)) and (v257==(953 -(148 + 804)))) then v204=2 -0;break;end if (((2111 + 136)>(1159 + 29)) and (v257==(0 + 0))) then v68=(v207 + v205) -(1 + 0 + 0);v208=0;v257=(1117 -628) -(331 + 157);end end end if ((v204==(366 -(5 + 361))) or ((4297 -(1064 + 61))>(6840 -2261))) then local v258=0 + 0;local v259;while true do if ((v258==0) or ((4369 -(742 + 426))==(4868 -(1151 + 619)))) then v259=0 -0;while true do if (((1314 -(1148 -653))==(2518 -1699)) and (v259==(0 + 0))) then v205=v84[2 -0];v206,v207=v79(v82[v205](v82[v205 + 1 + (0 -0)]));v259=4 -3;end if ((((3274 -(912 + 817)) -1170)<(1569 + 1569)) and (v259==(1 + (1121 -(440 + 681))))) then v204=1 + 0;break;end end break;end end end if (((3586 -(107 + 15))<=(11503 -6781)) and (v204==2)) then for v266=v205,v68 do local v267=(1365 -1057) -(78 + 230);while true do if (((1341 -(903 + 438))==v267) or ((892 + 667)>=((4250 -2293) + 1412))) then v208=v208 + (3 -2);v82[v266]=v206[v208];break;end end end break;end end break;end end else local v209=0 -0;local v210;local v211;local v212;while true do if ((v209==(0 -0)) or ((2806 -(270 + 167))==(1648 -(983 + 584)))) then v210=0;v211=nil;v209=1;end if (((3871 -(550 + 512))>=(717 -(210 -91))) and (v209==(1 + 0))) then v212=nil;while true do if ((v210==1) or ((33 + 238)==(3463 -((1070 -612) + 240 + 130)))) then for v268=1622 -(82 + (2237 -(385 + 313))), #v81 do local v269=(0 -0) -0;local v270;local v271;while true do if (((2453 -(944 + 101 + 931))<(1051 + (1767 -(996 + 181)))) and (v269==(0 + (449 -(391 + 58))))) then local v308=1229 -(294 + 935);while true do if (((5175 -(420 + 1383))>(1534 -932)) and (v308==0)) then v270=0 -0;v271=nil;v308=1 -0;end if (((3034 -(1025 + 449))>=(1026 -(52 + 324))) and ((3 -2)==v308)) then v269=(2 + 0) -1;break;end end end if ((((1739 -1173) + 997)<=(5206 -(345 + 35))) and (v269==(1 + 0))) then while true do if ((v270==(0 + 0)) or ((99 + 4645)<(912 + 760))) then v271=v81[v268];for v318=0 -0, #v271 do local v319=0 -0;local v320;local v321;local v322;local v323;local v324;while true do if ((v319==(0 -0)) or ((466 + 1420)<=(4520 -3268))) then v320=16 -((20 -9) + 5);v321=nil;v319=1 -0;end if ((v319==(2 + 0)) or ((1790 + 2840)<((160 -96) -44))) then v324=nil;while true do if ((v320==(1 + (3 -2))) or ((62 -(78 -45))>(5172 -(198 + 65)))) then while true do if (((773 -(35 + 738))==v321) or ((7493 -3012)<((4909 -2171) -1158))) then local v339=0 + 0;local v340;while true do if (((274 -(149 + 125))==v339) or ((1436 + (9167 -6711))<(2549 -1123))) then v340=0 -(0 + 0);while true do if ((v340==(1 + 0)) or ((464 + 138)>=(1177 + 2435))) then v321=(1779 -754) -(876 + 148);break;end if (((1955 -(105 + 9))>=(1697 -(1153 + 437))) and (v340==(0 -0))) then local v347=334 -(247 + 87);while true do if ((0==v347) or (4141<(3928 -(237 + 1655)))) then v322=v271[v318];v323=v322[1 + 0];v347=(1 -0) + 0;end if (((2599 -((1917 -(1303 + 390)) + 5))>((126 + 153) -205)) and ((1 + 0)==v347)) then v340=1 + 0;break;end end end end break;end end end if (((12285 -(9267 -(29 + 1144)))>(71 + 48)) and ((1 + 0)==v321)) then v324=v322[1219 -((134 -(11 + 32)) + 1126)];if (((v323==v82) and (v324>=v211)) or ((3220 -((332 -72) + 543))==(183 + 303))) then local v344=1090 -(992 + 98);while true do if ((v344==(0 -0)) or ((35 + 2066)>(20085 -15291))) then v212[v324]=v323[v324];v322[(5 -1) -3]=v212;break;end end end break;end end break;end if (((210 + 840)==(2059 -(504 + 505))) and (((0 -0) + 0)==v320)) then local v337=0 + 0;while true do if ((v337==(0 + 0)) or ((10877 -6572)<(1369 + 261))) then v321=0 + 0 + 0;v322=nil;v337=882 -(319 + 562);end if (((2223 + 11 + 268)==(100 + 2402)) and (v337==((1855 -(1474 + 377)) -3))) then v320=1 + 0;break;end end end if (((1985 -(111 + 325))<=(5956 -(602 + 648))) and ((1532 -((203 -115) + 1443))==v320)) then v323=nil;v324=nil;v320=2;end end break;end if ((v319==(1 + 0)) or (((3635 -(62 + 77)) -809)>(8485 -5170))) then v322=nil;v323=nil;v319=3 -1;end end end break;end end break;end end end break;end if ((v210==(0 -0)) or ((19848 -15877)<(955 + 247))) then local v260=0 + 0;while true do if (((0 -(0 + 0))==v260) or ((1203 -((2035 -(102 + 1602)) + 574))>=(7902 -4826))) then v211=v84[1907 -(621 + (2063 -(293 + 486)))];v212={};v260=(1 -0) + 0;end if ((v260==(1 -0)) or ((125 -35)>((2899 + 3851) -4345))) then v210=(327 -(215 + 111)) + 0;break;end end end end break;end end end elseif (((11674 -7460)>(1599 -(97 + 86))) and (v85<=(497 -(281 + (679 -507))))) then if ((v85<=(79 -37)) or (((678 + 2560) -(452 + 126 + 150))>=((32964 -25483) -2632))) then local v152=(0 + 0) -0;local v153;local v154;while true do if (((3325 -(427 + 84))<=((8965 -2861) -1443)) and (v152==(0 + 0))) then v153=0 -(0 -0);v154=nil;v152=1 + 0;end if (((4617 -(348 + 23))>(4283 -3129)) and (v152==(460 -(310 + 1 + 148)))) then while true do if (((1847 + 1989)>(659 -475)) and (v153==(23 -(11 + 12)))) then v154=v84[5 -3];v82[v154](v13(v82,v154 + (1715 -(1038 + 141 + 535)),v84[5 -2]));break;end end break;end end elseif ((v85==(38 + 5)) or ((1010 + 2825)>(12605 -8262))) then v38[v84[3 -0]]=v82[v84[4 -2]];else v82[v84[3 -1]]=v82[v84[1287 -((2368 -1348) + 264)]];end elseif (((1762 -635)<=(2110 -925)) and (v85<=(114 -69))) then v82[v84[1993 -(1639 + 352)]]=v82[v84[977 -(706 + 268)]][v82[v84[1 + 3]]];elseif ((v85>(33 + 13)) or ((4271 -(207 + 127 + (1276 -457)))<=(1058 -828))) then v82[v84[1062 -(87 + 973)]]=v37[v84[8 -5]];else local v216=1776 -(509 + (3748 -2481));local v217;while true do if ((v216==(0 + 0)) or ((5994 -(1241 + 456))<=(1909 -(183 + 1252)))) then v217=v84[8 -6];v82[v217]=v82[v217](v13(v82,v217 + (346 -(176 + 169)),v84[9 -6]));break;end end end v67=v67 + 1 + 0;break;end end break;end end end end A,B=v28(v11(v71));if  not A[1] then local v86=v36[4][v67] or "?";error("Script error at ["   .. v86   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end end end v15("LOL!",v9());break;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end end end
